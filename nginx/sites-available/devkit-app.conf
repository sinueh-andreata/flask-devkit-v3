server {
    listen 80;
    server_name homologacao1.passaura.app.br www.homologacao1.passaura.app.br;

    # Security headers (sem SSL)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs específicos para este site
    access_log /var/log/nginx/homologacao1.passaura.app.br.access.log;
    error_log /var/log/nginx/homologacao1.passaura.app.br.error.log;

    # Servir arquivos estáticos diretamente pelo Nginx
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Compressão para arquivos estáticos
        gzip_static on;
        
        # Fallback se arquivo não existir
        try_files $uri $uri/ @flask;
    }

    # Proxy para aplicação Flask
    location / {
    proxy_pass http://web:5777;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffers
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Fallback para arquivos estáticos não encontrados
    location @flask {
        proxy_pass http://web:5777;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
    }

    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}